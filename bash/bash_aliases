#!/usr/bin/env bash

# nvim
alias vi='nvim'
alias vimdiff='nvim -d'

# cd
alias cdwp='cd $HOME/workspaces/personal/'
alias cdws='cd $HOME/workspaces/study/'
alias cdwpn='cd $HOME/workspaces/personal/notes'
alias cdwpd='cd $HOME/workspaces/personal/dotfiles'
alias cdwppc='cd $HOME/workspaces/personal/private-configs'
alias cdwpts='cd $HOME/workspaces/personal/tmux-scripts'
alias cdvimplugin='cd $HOME/.local/share/nvim/site/pack/vim-plugins/'

# ls
alias ll='ls -lrth'

# tmux launch scripts
alias th='$HOME/workspaces/personal/dotfiles/tmux/home-tmux.sh'
alias tw='$HOME/workspaces/personal/dotfiles/tmux/work-tmux.sh'

# Jekyll
alias js='bundle exec jekyll serve'

# Git
alias gstatus='git status'
alias gbranch='git branch'
alias gadd='git add'
alias gaddall='git add -A'
alias gdiff='git diff'
alias glog='git log'
alias gc='git commit'
alias gcu='git commit -m "updated"'
alias gptm='git push origin master'
alias gpfm='git pull origin master'

# git add with fzf
gaf() {
    local file
    file=$(git status -s|grep '^.[^ ]'|fzf)
    if [ $? -ne 0 ]; then
        return
    fi
    echo Generating diff for selection: $file
    echo

    status=$(echo ${file}|awk '{print $1}')
    file=$(echo ${file}|awk '{print $2}')

    if [ $status = "??" -o $status = "db"  ]; then
        more "$file"
    else
        git diff "$file"
    fi

    echo
    read -p "Add to index? " choice
    if [ "$choice" = 'y' ]; then
        git add "$file"
        echo Added $file to index.
    else
        echo Aborting.
    fi
}

# git add with fzf recursive
gafr() {
    local file
    files=`git status -s|grep '^.[^ ]'`
    echo $files
    while true
    do
        file=`fzf <<< "$files"`
        if [ $? -ne 0 ]; then
            return
        fi
        echo Generating diff for selection: $file
        echo

        status=$(echo ${file}|awk '{print $1}')
        file=$(echo ${file}|awk '{print $2}')

        # It's very weird that on MacOS when the `git status -s` is being invoked
        # from within a script, for new files, the status is 'db' instead of '??'
        if [ $status = "??" -o $status = "db"  ]; then
            vi -R "$file"
        else
            git diff "$file"
        fi

        echo
        read -p "Add to index? " choice
        if [ "$choice" = 'y' ]; then
            git add "$file"
            echo Added $file to index.
            files=`grep -v "$file" <<<"$files"`
        else
            echo Aborting.
        fi
        if [ -z "$files" ]; then
            break
        fi
        read -p "Show next file? " choice
        if [ ! "$choice" = 'y' ]; then
            break
        fi
    done
}

# Unstages a file but does not revert the changes
gresethead() {
    local file
    file=$(git diff --name-only --cached|fzf)
    if [ $? -ne 0 ]; then
        return
    fi
    if [ -f "$file" ]; then
        git reset HEAD "$file"
    fi
}

grestore() {
    local file
    file=$(git diff --name-only|fzf)
    if [ $? -ne 0 ]; then
        return
    fi
    if [ -f "$file" ]; then
        git diff "$file"
        read -p "Restore file? " choice
        if [ "$choice" = 'y' ]; then
            git checkout -- "$file"
            echo Restored $file.
        else
            echo Aborting.
        fi
    fi
}

gsetconfigp() {
    git config user.name "Subhadip Ghosh"
    git config user.email "subhadipghosh11@gmail.com"

    echo Config updated!
    read -p "Also reset author for the last commit? " choice
    if [ "$choice" = 'y' ]; then
        git commit --amend --reset-author
    fi
}

# Maven
alias mvn-clean-install-skiptests='mvn clean install -DskipTests'
alias mvn-install-skiptests='mvn install -DskipTests'
alias mvn-package-skiptests='mvn package -DskipTests'

# Pandoc
alias pandoc-convert-doc="pandoc \
                            -V geometry:margin=0.8in \
                            -V fontsize:10pt \
                            -V mainfont='DejaVu Serif' \
                            -V monofont='DejaVu Sans Mono' \
                            -V urlcolor=blue \
                            -V toccolor=NavyBlue \
                            -s \
                            -N \
                            --toc \
                            -f markdown-implicit_figures \
                            --pdf-engine=xelatex"
alias pandoc-convert-resume="pandoc \
                                -V geometry:margin=0.8in \
                                -V mainfont='DejaVu Serif' \
                                -V monofont='DejaVu Sans Mono' \
                                -V urlcolor=blue \
                                -s \
                                -f markdown \
                                --pdf-engine=xelatex"

alias pandoc-convert-doc-with-code="pandoc \
                                -V geometry:margin=0.8in \
                                -V mainfont='DejaVu Serif' \
                                -V monofont='DejaVu Sans Mono' \
                                -V urlcolor=blue \
                                -N \
                                --template eisvogel \
                                --listings"
alias pandoc-convert-slides-pdf='pandoc -s -V colortheme:beaver -V theme:Szeged -t beamer'
alias pandoc-convert-slides-html='pandoc -s --webtex -i -t slidy'
alias pandoc-convert-mediawiki='pandoc -f markdown-implicit_figures -t mediawiki'
alias pandoc-convert-from-mediawiki='pandoc -f mediawiki -t markdown'

# Kubernetes
case $OSTYPE in
    linux*) alias minikube-start='minikube start --driver=kvm2';;
    darwin*) alias minikube-start="minikube start --driver=hyperkit --hyperkit-vpnkit-sock=/Users/${USER}/Library/Containers/com.docker.docker/Data/vpnkit.eth.sock";;
esac

# Open
which xdg-open 1>/dev/null && alias open='xdg-open 2>/dev/null'

# Search and open
so() {
    local file
    file=$(fzf)
    if [ $? -ne 0 ]; then
        return
    fi
    echo "Opening ${file}"
    open "${file}"
}

# Search and edit
se() {
    local file
    file=$(fzf)
    if [ $? -ne 0 ]; then
        return
    fi
    echo "Editing ${file}"
    vi "${file}"
}

# Reload bashrc/bash_profile
rb() {
    case "$(uname -s)" in
        Linux*)     . ~/.bashrc;;
        Darwin*)    . ~/.bash_profile;;
        *)          echo "Unknown OS";;
    esac
    echo "Reloaded bash configuration"
}

# Docker
alias dps='docker ps'
alias dpsall='docker ps -all'
alias dcls='docker container ls'
alias dclsa='docker container ls -a'

# Misc
alias newsboat="newsboat -u $HOME/workspaces/personal/private-configs/newsboat/urls -C ${DOTRCDIR}/newsboat/config"
alias podboat="podboat -C ${DOTRCDIR}/newsboat/config"

alias cq="cal -3"

alias cl="clear"

alias upc="update-personal-config"

case "$(uname -s)" in
    Linux*)
        alias chrome-private="chromium -incognito"
        ;;
    Darwin*)
        alias chrome-private="/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome -incognito"
        alias firefox="open -a Firefox"
        ;;
esac

# dict modified
dm() {
    if which dict 1>/dev/null; then
        dict $1 2>&1|less +G
    else
        echo ERROR: dict is not installed
    fi
}
