#!/usr/bin/env bash

if [ -z $DOTRCDIR ]; then
    echo WARNING: export DOTRCDIR before sourcing bash_aliases
fi

# nvim
alias vi='nvim'
alias vimdiff='nvim -d'
alias view='nvim -R'

# cd
export WP="$HOME/workspaces/personal"
export WPN="$WP/notes"
#alias cd='pushd'
alias cdwp="pushd $WP"
alias cdws='pushd $HOME/workspaces/study/'
alias cdwpn="pushd $WPN"
alias cdwpd="pushd $WP/dotfiles"
alias cdwppc="pushd $WP/private-configs"
alias cdwpts="pushd $WP/tmux-scripts"
alias cdvimplugin='pushd $HOME/.local/share/nvim/site/pack/vim-plugins/'

# ls
alias ll='ls -lrth'
alias l1='ls -1rt'

# tmux launch scripts
alias th="$WP/dotfiles/tmux/home-tmux.sh"
alias tw="$WP/dotfiles/tmux/work-tmux.sh"

# Jekyll
alias jekyll-serve='bundle exec jekyll serve'

# Git
source "${DOTRCDIR}/bash/git_aliases"

# Maven
alias mvn-clean-install-skiptests='mvn clean install -DskipTests'
alias mvn-install-skiptests='mvn install -DskipTests'
alias mvn-package-skiptests='mvn package -DskipTests'

# Pandoc
alias pandoc-convert-doc="pandoc \
                            -V geometry:margin=0.8in \
                            -V fontsize:10pt \
                            -V mainfont='DejaVu Serif' \
                            -V monofont='DejaVu Sans Mono' \
                            -V urlcolor=blue \
                            -V toccolor=NavyBlue \
                            -s \
                            -N \
                            --toc \
                            -f markdown-implicit_figures \
                            --pdf-engine=xelatex"
alias pandoc-convert-resume="pandoc \
                                -V geometry:margin=0.8in \
                                -V mainfont='DejaVu Serif' \
                                -V monofont='DejaVu Sans Mono' \
                                -V urlcolor=blue \
                                -s \
                                -f markdown \
                                --pdf-engine=xelatex"

alias pandoc-convert-doc-with-code="pandoc \
                                -V geometry:margin=0.8in \
                                -V mainfont='DejaVu Serif' \
                                -V monofont='DejaVu Sans Mono' \
                                -V urlcolor=blue \
                                -N \
                                --template eisvogel \
                                --listings"
alias pandoc-convert-slides-pdf='pandoc -s -V colortheme:beaver -V theme:Szeged -t beamer'
alias pandoc-convert-slides-html='pandoc -s --webtex -i -t slidy'
alias pandoc-convert-mediawiki='pandoc -f markdown-implicit_figures -t mediawiki'
alias pandoc-convert-from-mediawiki='pandoc -f mediawiki -t markdown'

# Kubernetes
case $OSTYPE in
    linux*) alias minikube-start='minikube start --driver=kvm2';;
    #darwin*) alias minikube-start="minikube start --driver=hyperkit --hyperkit-vpnkit-sock=/Users/${USER}/Library/Containers/com.docker.docker/Data/vpnkit.eth.sock";;
    darwin*) alias minikube-start="minikube start --driver=docker";;
esac
alias kcl='kubectl'

# Open
which xdg-open 1>/dev/null && alias open='xdg-open 2>/dev/null'

# Search and open
so() {
    local file
    file=`ls -t|fzf`
    if [ $? -ne 0 ]; then
        return
    fi
    echo "Opening ${file}"
    history -s open "${file}"
    open "${file}"
}

# Search and edit
se() {
    local file
    file=`fzf --preview='head -$FZF_PREVIEW_LINES {}'`
    if [ $? -ne 0 ]; then
        return
    fi
    echo "Editing ${file}"
    history -s vi "${file}"
    vi "${file}"
}

# Reload bashrc/bash_profile
rb() {
    case "$(uname -s)" in
        Linux*)     . ~/.bashrc;;
        Darwin*)    . ~/.bash_profile;;
        *)          echo "ERROR: Unknown OS";;
    esac
}

# Docker
alias dps='docker ps'
alias dpsall='docker ps -all'
alias dcls='docker container ls'
alias dclsa='docker container ls -a'
alias dstart-excalidraw='docker run --rm -dit --name excalidraw -p 5000:80 excalidraw/excalidraw:latest'
alias dstop-excalidraw='docker stop excalidraw'

# dict modified
dm() {
    if which dict 1>/dev/null; then
        dict $1 2>&1|less +G
    else
        echo ERROR: dict is not installed
    fi
}

# Python
alias py-create-venv="python3 -m venv ./.venv"
alias py-activate-venv=". .venv/bin/activate"

# Restcall
#alias restcall="$HOME/workspaces/personal/restcall/src/restcall.py"
alias lr="ls -lrt|grep .json$|grep -v res.json$"
sr() {
    local file
    file=`fzf --preview='head -$FZF_PREVIEW_LINES {}' -q '^get- | ^put- | ^post- !-res.json$ .json$ '`
    if [ $? -ne 0 ]; then
        return
    fi
    echo "Editing request file ${file}"
    history -s vi "${file}"
    vi "${file}"
}

rc() {
    local req_file
    req_file=$1
    if [ -z "$req_file" ]; then
        req_file=`fzf --preview='head -$FZF_PREVIEW_LINES {}' -q '!-res.json$ .json$ '`
        if [ $? -ne 0 ]; then
            return
        fi
        history -s rc "${req_file}"
    fi
    restcall "$req_file"
    if [ $? -ne 0 ]; then
        return
    fi
    read -p "Open response file? " choice
    if [ "$choice" = 'y' -o -z "$choice" ]; then
        local res_file
        res_file=`cut -f1 -d '.' <<<"$req_file"`
        res_file="${res_file}-res.json"
        vi -R "$res_file"
    fi
}

# pushd and popd
alias po='popd'
alias dv='dirs -v'
alias pws='dirs -v'

## pushd with fuzzy search
pu() {
    local initPath
    case $# in
        1) initPath="$1";;
        0) initPath=".";;
        *) echo ERROR: Zero or one argument expected.
    esac
    local path
    if which tree 1>/dev/null 2>&1; then
        # Type directory (-d)
        # Show full path (-f)
        # Don't show indentation (-i)
        # Follow symbolic links (-l)
        # Do not descend directories containing more than 30 files (--filelimit): Experimental
        # Ignore Library folder - for MacOS
        # Max depth 5
        path=`tree -dfilc --filelimit 30 -I 'Library/' -L 5 "$initPath" 2>/dev/null | fzf --preview='ls -tC {} | head -$FZF_PREVIEW_LINES' --preview-window=up`
        if [ $? -ne 0 ]; then
            return
        fi
    else
        # Follow symbolic links (-L)
        # Exclude paths with Library - for MacOS
        # Exclude paths hidden files
        # Type directory
        # Max search depth 5
        path=`find -L "$initPath" ! -path '*Library*' ! -path '*/.*' -type d -maxdepth 5 2>/dev/null | fzf --preview='ls -C {} | head -$FZF_PREVIEW_LINES' --preview-window=up`
        if [ $? -ne 0 ]; then
            return
        fi
    fi
    echo pd $path
    pushd "$path"
}

## pushd go back to previous directories with fuzzy search
pf() {
    local entry
    entry=`dirs -v -l | fzf --tac --tiebreak=begin`
    if [ $? -ne 0 ]; then
        return
    fi
    local choice=`awk '{print $1}' <<<$entry`
    history -s pushd +$choice
    pushd +$choice
}

## pushd back - Deprecated
pub() {
    if [ -n "$1" ]; then
        history -s pushd +$1
        pushd +$1
    else
        dirs -v -l
        read -p "Enter index: " choice
        if [ -z "$choice" ]; then
            return
        fi
        history -s pushd +$choice
        pushd +$choice
    fi
}

## Experimental
dedup-dirstack() {
    local stack=`dirs -p -l`
    local ustack=`sort <<<$stack|uniq`
    if [ "$stack" != "$ustack" ]; then
        dirs -c
        local cur_dir=`dirs -l`

        local IFS_ORIG=$IFS
        IFS=$'\n'
        
        for path in $ustack; do
            if [ "$path" != "$cur_dir" ]; then
                pushd -n "$path"
            fi
        done

        IFS=$IFS_ORIG
    fi
}

## Pushd with dedup-dirstack
pd() {
    pushd "$1" 1>/dev/null
    dedup-dirstack 1>/dev/null
    dirs
}
_fzf_setup_completion dir pd

# Gradle
alias gr="./gradlew"
alias gr-publishtomavenlocal="./gradlew publishToMavenLocal"
alias gr-build="./gradlew build -x test"
alias gr-buildtest="./gradlew build"

# gpg
encrypt-file() {
    local infile="$1"
    gpg -c "$infile"
    read -p "Delete original file? " choice
    if [ "$choice" = 'y' ]; then
        rm "$infile"
        echo Deleted $infile.
    fi
}

decrypt-file() {
    local infile="$1"
    local outfile=`sed 's/.gpg$//' <<<"$infile"`
    gpg -o "$outfile" -d "$infile"
}

# links
if which links2 1>/dev/null 2>&1; then
    alias links='links2'
fi

# lynx
alias lynx="lynx -cfg=${DOTRCDIR}/lynx/lynx.cfg"
source $HOME/workspaces/personal/private-configs/lynx/lynx-aliases

# Misc
alias newsboat="newsboat -u $WP/private-configs/newsboat/urls -C ${DOTRCDIR}/newsboat/config"
alias podboat="podboat -C ${DOTRCDIR}/newsboat/config"

alias cq="cal -3"

alias cl="clear"

alias upc="update-personal-config"

alias calc="bc -l"

alias t="trash"

pwgen-sane() {
    pwgen -Byvs --remove-chars='~`$%^&()-_+=\|[{]}"<>/?'"'" $@
}

source $HOME/workspaces/personal/private-configs/play/play-aliases

case "$(uname -s)" in
    Linux*)
        alias chrome-private="chromium -incognito"
        alias clear-clipboard="xclip -selection clipboard </dev/null \
            && xclip -selection primary </dev/null \
            && xclip -selection secondary </dev/null"
        alias cal="ncal -b"
        alias pbcopy='xclip -selection clipboard'
        ;;
    Darwin*)
        alias chrome-private="/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome -incognito"
        alias firefox="open -a Firefox"
        alias quicktime='open -a "Quicktime Player"'
        ;;
esac

kill-bg-jobs() {
    IFS_ORIG=$IFS
    IFS=$'\n'
    for job in `jobs`; do
        job_id=`cut -f1 -d ']' <<<$job|tr -d '['`
        echo Killing bg job with ID:$job_id
        kill %$job_id
    done
    IFS=$IFS_ORIG
}
