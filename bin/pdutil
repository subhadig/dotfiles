#!/usr/bin/env bash

help() {
    echo pdutil [preset] [input file] [output file]
    echo Allowed presets:
    echo -e "\tm2h: markdown to html"
    echo -e "\tm2p: markdown to pdf"
    echo -e "\tm2s: markdown to slides"
}

if [ $# -lt 2 ]; then
    echo Incorrect number of inputs: $#
    help
    exit 1
fi

preset=$1
input=$2
output=$3

html_css=$HOME/workspaces/personal/dotfiles/pandoc/darkdown.css
pdf_css=$HOME/workspaces/personal/dotfiles/pandoc/pdf.css

# html or latex
pdf_flag='html'

case "$(uname -s)" in
    Linux*)     chrome_exec='chromium';;
    Darwin*)    chrome_exec='/Applications/Google Chrome.app/Contents/MacOS/Google Chrome';;
    *)          echo "Unknown OS";;
esac


markdown2html() {
    if [ -z ${output} ]; then
        output=`sed 's/.md$/.html/' <<<$input`
    fi
    echo Converting $input to $output
    pandoc \
        -s \
        --template $HOME/workspaces/personal/dotfiles/pandoc/default.html5 \
        --toc \
        -V toc-title:"Table of Contents" \
        -c $html_css \
        -o "$output" \
        "$input" 
}

markdown2pdf() {
    case "$pdf_flag" in
        'html')
            markdown2pdfViaHtml
            ;;
        'latex')
            markdown2pdfViaLatex
            ;;
    esac
}

markdown2pdfViaLatex() {
    if [ -z "${output}" ]; then
        output=`sed 's/.md$/.pdf/' <<<$input`
    fi
    echo Converting $input to $output

    pandoc \
        -s \
        -f markdown \
        --template $HOME/workspaces/personal/dotfiles/pandoc/custom.latex \
        -V geometry:margin=0.8in \
        -V mainfont='DejaVu Serif' \
        -V monofont='DejaVu Sans Mono' \
        -V fontsize='12pt' \
        -V urlcolor='blue' \
        --pdf-engine=xelatex \
        -o "$output" \
        "$input"
}

markdown2pdfViaHtml() {
    temp_output=`sed 's/.md$/.html/' <<<$input`
    if [ -z "${output}" ]; then
        output=`sed 's/.md$/.pdf/' <<<$input`
    fi
    echo Converting $input to $output
    pandoc \
        -s \
        -c $pdf_css \
        -o "$temp_output" \
        "$input"

    "$chrome_exec" --headless \
        --disable-gpu \
        --print-to-pdf-no-header \
        --print-to-pdf="$output" \
        "$temp_output"

    rm "$temp_output"
}

case "$preset" in
    'm2h')
        markdown2html
        ;;

    'm2p')
        markdown2pdf
        ;;

    'm2s')
        echo ERROR: Not implemented yet.
        ;;

    *)
        echo ERROR: Invalid preset: $preset
        help
        exit 1
        ;;
esac
