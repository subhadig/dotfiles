#!/usr/bin/env bash

print_usage() {
    echo "Help: Move notes to the target directory."
    echo "Usage: mv-notes [path to the markdown notes file] [target directory]"
    echo "options:"
    echo "-p     Only print the changes."
    echo "-h     Print this Help."
    echo
}

while getopts "hp" options; do
    case ${options} in
        h)
            print_usage
            exit 0
            ;;
        p)
            write=false
            echo "Running in print mode. No changes will be made."
            ;;
        *)
            echo "ERROR: Invalid option."
            print_usage
            exit 1
            ;;
    esac
done

if [ $# -lt 2 ]; then
    echo Incorrect number of inputs: $#
    print_usage
    exit 1
fi

#TODO Ask if cp or mv. Default cp

shift "$(($OPTIND - 1))"
notes="$1"
target_dir="$2"

if [ ! -f "$notes" ]; then
    echo Notes does not exist: "$notes"
    exit 1
fi

if [ ! -d "$target_dir" ]; then
    echo Target directory does not exist: "$target_dir"
    exit 1
fi

echo Moving notes: $notes to target:$target_dir

if grep -q "\/$" <<< $target_dir; then
    target_dir=${target_dir:0:-1}
fi

target_image_dir="$target_dir/images"
if [ ! -d "$target_image_dir" ]; then
    echo Creating target images directory
    if $write; then
        mkdir "$target_image_dir"
    else
        echo mkdir "$target_image_dir"
    fi
fi

while read line
do
    if grep -q "^\!\[\]" <<< "$line"; then
        image_file=$line
        if grep -q "{" <<< "$image_file"; then
            image_file=`cut -d "{" -f 1 <<< "$image_file"`
        fi
        image_file=${image_file:4: -1}
        image_file=`dirname "$notes"`/"$image_file"
        echo Moving $image_file to $target_image_dir
        if $write; then
            mv "$image_file" "$target_image_dir"
        else
            echo mv "$image_file" "$target_image_dir"
        fi
    fi
done < "$notes"

echo Moving $notes to the $target_dir
if $write; then
    mv "$notes" "$target_dir"
else
    echo mv "$notes" "$target_dir"
fi
